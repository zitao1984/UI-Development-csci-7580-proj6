{"version":3,"sources":["redux/stateConstants.js","redux/actionConstants.js","redux/reducers/login.js","redux/reducers/users.js","redux/reducers/chats.js","redux/reducers/messages.js","redux/reducers/files.js","redux/reducers/loading.js","redux/store.js","fbConfig.js","redux/actions.js","components/JoinByCode.js","components/Slide.js","components/SlideIndicator.js","components/OnboardingSlides.js","components/LandingPage.js","components/Registration.js","components/Login.js","components/Message.js","components/GalleryItem.js","components/Gallery.js","components/Conversation.js","components/Search.js","components/ChatPreview.js","components/CreateNewChat.js","components/SidePreview.js","views/App.js","reportWebVitals.js","index.js"],"names":["LOGIN_STATE","STATUS","COMPLETE_ONBOARDING","LOGIN_SUCCESS","INVALID_LOGIN","LOADING","LOADING_SUCCESS","LOGIN_NETWORK_ERROR","LOGOUT","POPULATE_FILES","REGISTER_SUCCESS","REGISTER_FAIL","POPULATE_USERS","POPULATE_CHATS","POPULATE_MESSAGES","STORE_FILES","REGISTER_EXISTED","DELETE_CHATS","ADD_PEOPLE_TO_CHAT","POPULATE_MESSAGES_BY_ID","DELETE_PEOPLE_FROM_CHAT","INITIAL_STATE","status","user","onboardingStatus","users","chats","messages","currentMessages","files","rootReducer","combineReducers","loading","state","action","type","login","console","log","payload","createStore","applyMiddleware","thunkMiddleware","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","firestore","loginSuccess","validateUser","username","password","dispatch","collection","where","get","then","querySnapshot","size","doc","docs","id","firstname","data","lastname","store","getState","catch","error","checkUser","checkIfUsernameExist","forEach","push","find","getUserById","userId","exists","completeOnboarding","userToChange","userCompletedOnboarding","a","docRef","update","getUsers","limit","populateUsers","populateChats","populateMessages","addFile","chatId","content","fileName","fileUrl","participants","sender","timestamp","add","newDoc","newFile","concat","storeFiles","addUserToChat","chatID","chatsIndex","findIndex","obj","addPeopleToChat","JoinByCode","props","currentUser","useSelector","currentChat","useState","isValid","undefined","setChatID","useDispatch","uniqueChatCode","Set","map","item","onlyUnique","value","index","self","indexOf","clearForm","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","valuse","onChange","e","event","target","includes","required","className","style","display","Footer","to","Button","disabled","onClick","joinedChat","filter","onHide","Slide","slideStatus","children","SlideIndicator","clickHandler","OnboardingSlides","activeSlide","setActiveSlide","setSlideState","slideId","src","process","alt","indicators","i","slideID","generateSlideIndicators","LandingPage","loginState","onboarding","modalShow","setModalShow","menu","Item","wrap","href","tabIndex","aria-disabled","show","overlay","color","backgroundColor","toUpperCase","editingBegun","Registration","setUsername","setPassword","history","useHistory","handleRegister","registerUser","handleKeyPress","keyCode","preventDefault","useEffect","htmlFor","name","placeholder","onKeyUp","Login","handleLogin","ghost","onBack","subTitle","Message","userState","date","Date","message","toDateString","marginLeft","rel","width","class","toLocaleTimeString","GalleryItem","publication","media","Gallery","now","length","title","dd","file","author","Conversation","messageState","usernames","setFile","setFileUrl","filePicked","setFilePicked","setMessage","galleryToggle","setGalleryToggle","filesForChat","setFilesForChat","setMessageLength","useParams","cid","storage","sendMessage","getTime","newMessage","addMessages","getFilesForChat","unsubscribe","onSnapshot","messageWindow","document","getElementById","bottom","scrollHeight","clientHeight","scrollTo","scrollToBottom","chatName","join","extra","icon","faEllipsisV","sort","b","faUpload","faCheck","ref","put","on","snapShot","err","child","getDownloadURL","fireBaseUrl","faTimes","aria-describedby","faPaperPlane","Search","text","setText","submit","submitSearch","faSearch","ChatPreview","list","nameList","peopleName","chat","slice","toString","CreateNewChat","userList","setChatName","setPotentialName","setParticipants","wrongSpelling","checkWrongSpelling","makeUniqueID","result","characters","charactersLength","charAt","Math","floor","random","makeID","checkParticipant","split","myUser","inviteUser","addParticipant","newChat","set","addChat","SidePreview","search","setSearch","addByCode","setAddByCode","chatState","myChat","setCurrentChat","displaySide","setDisplaySide","param","currentUserChat","getChatByChatId","faHome","faChevronLeft","direction","variant","faPlus","faChevronRight","window","location","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cfc4065f.chunk.js","sourcesContent":["export const LOGIN_STATE = {\r\n    LOGGED_IN: \"logged in\",\r\n    LOGGED_OUT: \"logged out\",\r\n    INVALID_LOGIN: \"invalid login\",\r\n    NETWORK_ERROR: \"network error\",\r\n    REGISTER_FAIL : \"failed to register\",\r\n    REGISTER_SUCCESS: \"successfully registered\",\r\n    REGISTER_EXISTED: \"username is not availble\"\r\n}\r\n\r\nexport const STATUS = {\r\n    LOADING: \"loading\",\r\n    SUCCESS: \"success\",\r\n    FAIL: \"fail\"\r\n}","export const COMPLETE_ONBOARDING = \"COMPLETE_ONBOARDING\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const INVALID_LOGIN = \"INVALID_LOGIN\";\r\nexport const LOADING = \"LOADING\";\r\nexport const LOADING_SUCCESS = \"LOADING_SUCCESS\";\r\nexport const LOGIN_NETWORK_ERROR = \"LOGIN_NETWORK_ERROR\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const POPULATE_FILES = \"POPULATE_FILES\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const POPULATE_USERS = \"POPULATE_USERS\";\r\nexport const POPULATE_CHATS = \"POPULATE_CHATS\";\r\nexport const POPULATE_MESSAGES = \"POPULATE_MESSAGES\";\r\nexport const STORE_FILES = \"STORE_FILE\";\r\nexport const REGISTER_EXISTED = \"REGISTER_EXISTED\";\r\nexport const DELETE_CHATS = \"DELETE_CHATS\";\r\nexport const ADD_PEOPLE_TO_CHAT=\"ADD_PEOPLE_TO_CHAT\"\r\nexport const POPULATE_MESSAGES_BY_ID = \"POPULATE_MESSAGES_BY_ID\";\r\nexport const DELETE_PEOPLE_FROM_CHAT=\"DELETE_PEOPLE_FROM_CHAT\"\r\n\r\n// export const ADD_NEW_CHATS = \"ADD_NEW_CHATS\"\r\n\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  INVALID_LOGIN,\r\n  LOGIN_NETWORK_ERROR,\r\n  LOGOUT,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  REGISTER_EXISTED, COMPLETE_ONBOARDING\r\n} from \"../actionConstants\";\r\nimport { LOGIN_STATE } from \"../stateConstants\";\r\n\r\nconst INITIAL_STATE = {status: LOGIN_STATE.LOGGED_OUT, user: {onboardingStatus: false}};\r\n\r\nexport const loginReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case COMPLETE_ONBOARDING:\r\n      console.log('ONBOARDING REDUCER REACHED', state.user)\r\n      return {\r\n        status: LOGIN_STATE.LOGGED_IN,\r\n        user: action.payload.user\r\n      }\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        status: LOGIN_STATE.LOGGED_IN,\r\n        user: action.payload.user,\r\n      };\r\n    case INVALID_LOGIN:\r\n      return {\r\n        status: LOGIN_STATE.INVALID_LOGIN,\r\n      };\r\n    case LOGIN_NETWORK_ERROR:\r\n      return {\r\n        status: LOGIN_STATE.NETWORK_ERROR,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        status: LOGIN_STATE.LOGGED_OUT,\r\n        user: action.payload.user\r\n      }\r\n\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        status: LOGIN_STATE.REGISTER_SUCCESS\r\n      }\r\n    case REGISTER_FAIL:\r\n      return {\r\n        status: LOGIN_STATE.REGISTER_FAIL\r\n      }\r\n    case REGISTER_EXISTED:\r\n      return {\r\n        status: LOGIN_STATE.REGISTER_EXISTED\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import { COMPLETE_ONBOARDING, POPULATE_USERS } from \"../actionConstants\";\r\nconst INITIAL_STATE = { users: [] };\r\n\r\nexport const usersReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n\r\n    case POPULATE_USERS:\r\n      return {\r\n        users: action.payload.users,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {ADD_PEOPLE_TO_CHAT,DELETE_CHATS, POPULATE_CHATS,DELETE_PEOPLE_FROM_CHAT} from \"../actionConstants\";\r\nconst INITIAL_STATE = { chats: []};\r\n\r\nexport const chatReducer = (state = INITIAL_STATE, action) => {\r\n\r\n  switch (action.type) {\r\n    case POPULATE_CHATS:\r\n      return {\r\n        chats: action.payload.chats,\r\n      };\r\n    case DELETE_CHATS:\r\n      return {\r\n        chats: action.payload.chats,\r\n      };\r\n    case ADD_PEOPLE_TO_CHAT:\r\n      return {\r\n        chats: action.payload.chats,\r\n      };\r\n    case DELETE_PEOPLE_FROM_CHAT:\r\n      return {\r\n        chats: action.payload.chats,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { POPULATE_MESSAGES, POPULATE_MESSAGES_BY_ID } from \"../actionConstants\";\r\nconst INITIAL_STATE = { messages: [], currentMessages: [] };\r\n\r\nexport const messageReducer = (state = INITIAL_STATE, action) => {\r\n\r\n  switch (action.type) {\r\n    case POPULATE_MESSAGES:\r\n      return {\r\n        messages: [...action.payload.messages],\r\n        currentMessages: []\r\n      };\r\n\r\n    case POPULATE_MESSAGES_BY_ID:\r\n      return {\r\n        messages: [...state.messages],\r\n        currentMessages: action.payload.currentMessages\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { LOGOUT, STORE_FILES, POPULATE_FILES} from \"../actionConstants\";\r\n\r\nconst INITIAL_STATE = {files: []};\r\n\r\nexport const filesReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case POPULATE_FILES:\r\n            console.log(\"REDUCER REACHED\")\r\n            return {\r\n                files: action.payload.files\r\n            }\r\n        case STORE_FILES:\r\n            return [ ...action.payload.files ]\r\n        case LOGOUT:\r\n            return INITIAL_STATE;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    LOADING,\r\n    LOADING_SUCCESS\r\n} from \"../actionConstants\";\r\nimport { STATUS } from \"../stateConstants\";\r\n\r\nconst INITIAL_STATE = STATUS.LOADING;\r\n\r\nexport const loadingReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                status: STATUS.LOADING\r\n            }\r\n        case LOADING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                status: STATUS.SUCCESS\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { loginReducer } from \"./reducers/login\";\r\nimport { usersReducer } from \"./reducers/users\";\r\nimport { chatReducer } from \"./reducers/chats\";\r\nimport { messageReducer } from \"./reducers/messages\";\r\nimport { filesReducer } from \"./reducers/files\";\r\nimport {loadingReducer} from \"./reducers/loading\";\r\nconst rootReducer = combineReducers({\r\n  loading: loadingReducer,\r\n  login: loginReducer,\r\n  users: usersReducer,\r\n  chats: chatReducer,\r\n  messages: messageReducer,\r\n  files: filesReducer\r\n});\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBA6zMNW8McJOqHfXvedS0taLqdTuxpTJE\",\r\n  authDomain: \"cs7580-final-project.firebaseapp.com\",\r\n  projectId: \"cs7580-final-project\",\r\n  storageBucket: \"cs7580-final-project.appspot.com\",\r\n  messagingSenderId: \"891554190109\",\r\n  appId: \"1:891554190109:web:bf6ba1d0f51e32059707f4\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// var firebaseConfig = {\r\n//   apiKey: \"AIzaSyCrndjqDXRd52_lwhG2CvWLq-2HL-6EpGA\",\r\n//   authDomain: \"cs7580-finalproj4.firebaseapp.com\",\r\n//   projectId: \"cs7580-finalproj4\",\r\n//   storageBucket: \"cs7580-finalproj4.appspot.com\",\r\n//   messagingSenderId: \"999732583313\",\r\n//   appId: \"1:999732583313:web:1b63fceb2a3fc09fc75830\"\r\n// };\r\n// // Initialize Firebase\r\n// firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import {\r\n  COMPLETE_ONBOARDING,\r\n  LOGIN_SUCCESS,\r\n  INVALID_LOGIN,\r\n  LOGOUT,\r\n  LOGIN_NETWORK_ERROR,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  POPULATE_USERS,\r\n  POPULATE_CHATS,\r\n  POPULATE_MESSAGES,\r\n  STORE_FILES,\r\n  LOADING,\r\n  LOADING_SUCCESS,\r\n  POPULATE_FILES,\r\n  REGISTER_EXISTED,\r\n  DELETE_CHATS,\r\n  ADD_PEOPLE_TO_CHAT,\r\n  POPULATE_MESSAGES_BY_ID,\r\n  DELETE_PEOPLE_FROM_CHAT\r\n} from \"./actionConstants\";\r\nimport store from \"./store\";\r\nimport firebase from \"../fbConfig\";\r\n\r\nconst database = firebase.firestore();\r\n\r\nexport const loginSuccess = (user) => ({\r\n  type: LOGIN_SUCCESS,\r\n  payload: {\r\n    user,\r\n  },\r\n});\r\n\r\nexport const loginFail = () => ({\r\n  type: INVALID_LOGIN,\r\n});\r\n\r\nexport const registerSuccess = () => ({\r\n  type: REGISTER_SUCCESS,\r\n});\r\n\r\nexport const registerFail = () => ({\r\n  type: REGISTER_FAIL,\r\n});\r\n\r\nexport const registerExistedUser = () => ({\r\n  type: REGISTER_EXISTED,\r\n});\r\n\r\nexport const loginNetworkError = () => ({\r\n  type: LOGIN_NETWORK_ERROR,\r\n});\r\n\r\nexport const logout = () => ({\r\n  type: LOGOUT,\r\n  payload: {\r\n    user: {\r\n      onboardingStatus: false,\r\n    },\r\n  },\r\n});\r\n\r\nexport const storeFiles = (files) => ({\r\n  type: STORE_FILES,\r\n  payload: {\r\n    files,\r\n  },\r\n});\r\n// USERS\r\nexport const validateUser = (username, password) => {\r\n  return (dispatch) => {\r\n    database\r\n      .collection(\"users\")\r\n      .where(\"username\", \"==\", username)\r\n      .where(\"password\", \"==\", password)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        if (querySnapshot.size === 1) {\r\n          const doc = querySnapshot.docs[0];\r\n          const user = {\r\n            id: doc.id,\r\n            firstname: doc.data().firstname,\r\n            lastname: doc.data().lastname,\r\n            username: doc.data().username,\r\n            onboardingStatus: doc.data().onboardingStatus,\r\n          };\r\n          {\r\n            console.log(\"user that logged in \", user);\r\n          }\r\n          dispatch(loginSuccess(user));\r\n          console.log(\"yay logged in success\", store.getState());\r\n        } else {\r\n          console.log(\"login was not successful\");\r\n          dispatch(loginFail());\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(loginNetworkError());\r\n      });\r\n  };\r\n};\r\n\r\nconst checkUser = (username) => {\r\n  return checkIfUsernameExist(username);\r\n};\r\nexport const registerUser = (username, password) => {\r\n  return async (dispatch) => {\r\n    let result;\r\n\r\n    result = await checkUser(username);\r\n\r\n    if (!result) {\r\n      console.log(\"2\");\r\n      database\r\n        .collection(\"users\")\r\n        .add({\r\n          // id: makeid(5),\r\n          onboardingStatus: false,\r\n          username: username,\r\n          password: password,\r\n        })\r\n        .then((doc) => {\r\n          let id = doc.id;\r\n          dispatch(getUserById(id));\r\n          dispatch(registerSuccess());\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"Unable to register new user\");\r\n          dispatch(registerFail());\r\n        });\r\n    } else {\r\n      console.log(\"This username has already existed\");\r\n      dispatch(registerExistedUser());\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const checkIfUsernameExist = (username) => {\r\n  return database\r\n    .collection(\"users\")\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      let users = [];\r\n      querySnapshot.forEach((doc) => {\r\n        users.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      const result = users.find((user) => user.username === username);\r\n      return result;\r\n    });\r\n};\r\nexport const getUserById = (userId) => {\r\n  return (dispatch) => {\r\n    database\r\n      .collection(\"users\")\r\n      .doc(userId)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          const user = {\r\n            id: doc.id,\r\n            ...doc.data()}\r\n          console.log(\"Document data:\", user);\r\n          dispatch(loginSuccess(user));\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such document!\");\r\n          return null;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting document:\", error);\r\n        return null;\r\n      });\r\n  };\r\n};\r\n\r\nexport const completeOnboarding = () => {\r\n  // Gets the current user from the store. Note the store import above.\r\n  const userToChange = store.getState().login.user;\r\n  // console.log(userId)\r\n  // userCompletedOnboarding(userId);\r\n  return {\r\n    type: COMPLETE_ONBOARDING,\r\n    payload: {\r\n      user: {\r\n        firstname: userToChange.firstname,\r\n        id: userToChange.id,\r\n        lastname: userToChange.lastname,\r\n        onboardingStatus: true,\r\n        username: userToChange.username,\r\n      },\r\n    },\r\n  };\r\n};\r\nexport const resetOnboarding = () => {\r\n  // Gets the current user from the store. Note the store import above.\r\n  const userToChange = store.getState().login.user;\r\n  // console.log(userId)\r\n  // userCompletedOnboarding(userId);\r\n  return {\r\n    type: COMPLETE_ONBOARDING,\r\n    payload: {\r\n      user: {\r\n        firstname: userToChange.firstname,\r\n        id: userToChange.id,\r\n        lastname: userToChange.lastname,\r\n        onboardingStatus: false,\r\n        username: userToChange.username,\r\n      },\r\n    },\r\n  };\r\n};\r\nexport const userCompletedOnboarding = () => {\r\n  const userId = store.getState().login.user.id;\r\n  console.log(userId);\r\n  return async (dispatch) => {\r\n    const docRef = database.collection(\"users\").doc(userId);\r\n    console.log(\"DOC REF\", docRef);\r\n    await docRef.update({ onboardingStatus: true });\r\n    dispatch(completeOnboarding());\r\n  };\r\n};\r\n\r\nexport const populateUsers = (users) => ({\r\n  type: POPULATE_USERS,\r\n  payload: {\r\n    users,\r\n  },\r\n});\r\n\r\nexport const getUsers = () => {\r\n  return (dispatch) => {\r\n    database\r\n      .collection(\"users\")\r\n      .limit(25)\r\n\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let users = [];\r\n\r\n        querySnapshot.forEach((doc) => {\r\n          users.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(populateUsers(users));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n};\r\n\r\nexport const getUsernameByUserId = (userId, users) => {\r\n  const result = users.find((user) => user.id === userId);\r\n  if (result) {\r\n    return result.username;\r\n  }\r\n};\r\n\r\n// CHATS\r\nexport const populateChats = (chats) => ({\r\n  type: POPULATE_CHATS,\r\n  payload: {\r\n    chats,\r\n  },\r\n});\r\n\r\nexport const getChats = () => {\r\n  return (dispatch) => {\r\n    database\r\n      .collection(\"chats\")\r\n      .limit(25)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        let chats = [];\r\n        querySnapshot.forEach((doc) => {\r\n          chats.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(populateChats(chats));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n};\r\n\r\n\r\n// MESSAGES\r\n\r\nexport const populateMessages = (messages) => ({\r\n  type: POPULATE_MESSAGES,\r\n  payload: {\r\n    messages,\r\n  },\r\n});\r\n\r\nexport const populateMessagesById = (messages) => ({\r\n  type: POPULATE_MESSAGES_BY_ID,\r\n  payload: {\r\n    currentMessages: messages\r\n  },\r\n});\r\n\r\n\r\nexport const getMessages = (chatID) => {\r\n  console.log(\"ACTIONS GET MESSAGES\")\r\n  return (dispatch) => {\r\n    database\r\n      .collection(\"chats\")\r\n        .doc(chatID)\r\n        .collection(\"messages\")\r\n        .onSnapshot((querySnapshot) => {\r\n            if (querySnapshot.size > 0) {\r\n              let messages = [];\r\n              querySnapshot.forEach(doc => {\r\n                messages.push({\r\n                  id: doc.id,\r\n                  ...doc.data(),\r\n                })  ;\r\n\r\n              });\r\n\r\n                dispatch(populateMessages(messages));\r\n            }\r\n                })\r\n\r\n}};\r\n\r\n\r\n\r\n\r\nexport const getMessagesById = (chatId, messages) => {\r\n  return (dispatch) => {\r\n    const res = messages.filter(message => message.chatId === chatId)\r\n    console.log(\"before\", res)\r\n  dispatch(populateMessagesById(res))\r\n  \r\n  }\r\n};\r\n\r\n\r\nexport const addMessages = (\r\n  chatId,\r\n  content,\r\n  fileName,\r\n  fileUrl,\r\n  participants,\r\n  sender,\r\n  timestamp,\r\n  type\r\n) => {\r\n  return (dispatch) => {\r\n    const messages = store.getState().messages;\r\n    database\r\n      .collection(\"chats\")\r\n        .doc(chatId).collection(\"messages\")\r\n      .add({\r\n        chatId: chatId,\r\n        content: content,\r\n        fileName: fileName,\r\n        fileUrl: fileUrl,\r\n        participants: participants,\r\n        sender: sender,\r\n        timestamp: timestamp,\r\n        type: type,\r\n      })\r\n      .then((newDoc) => {\r\n        console.log(messages);\r\n        let newMessage = messages.messages.concat([\r\n          {\r\n            id: newDoc.id,\r\n            chatId: chatId,\r\n            content: content,\r\n            fileName: fileName,\r\n            fileUrl: fileUrl,\r\n            participants: participants,\r\n            sender: sender,\r\n            timestamp: timestamp,\r\n            type: type,\r\n          },\r\n        ]);\r\n        dispatch(populateMessages(newMessage));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Could not add the message\");\r\n      });\r\n  };\r\n};\r\n\r\n// FILES\r\nexport const addFile =   (chatId,\r\n    content,\r\n    fileName,\r\n    fileUrl,\r\n    participants,\r\n    sender,\r\n    timestamp,\r\n    type )=> {\r\n  const files = store.getState().files;\r\n  return (dispatch) => {\r\n    database\r\n        .collection(\"chats\")\r\n        .doc(chatId).collection(\"messages\")\r\n      .add({\r\n        chatId: chatId,\r\n        content: content,\r\n        fileName: fileName,\r\n        fileUrl: fileUrl,\r\n        participants: participants,\r\n        sender: sender,\r\n        timestamp: timestamp,\r\n        type: type,\r\n      })\r\n      .then((newDoc) => {\r\n        let newFile = files.files.concat([\r\n          {\r\n            chatId: chatId,\r\n            content: content,\r\n            fileName: fileName,\r\n            fileUrl: fileUrl,\r\n            participants: participants,\r\n            sender: sender,\r\n            timestamp: timestamp,\r\n            type: type,\r\n          },\r\n        ]);\r\n\r\n        dispatch(storeFiles(newFile));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error adding file:\", error);\r\n      });\r\n  };\r\n};\r\n\r\n// LOADING\r\nexport const setLoading = () => ({\r\n  type: LOADING,\r\n});\r\n\r\nexport const setLoadingSuccess = () => ({\r\n  type: LOADING_SUCCESS,\r\n});\r\n\r\nexport const getFileByChatId =(chatId)=> {\r\n  return (dispatch) => {\r\n    let messages = store.getState().messages.messages\r\n    let files = []\r\n    for (let i = 0; i < messages.length; i++) {\r\n      if (messages[i].fileName != \"\" ||  messages[i].fileURl != \"\") {\r\n        files.push(messages[i])\r\n      }\r\n    }\r\n    dispatch(populateFiles(files))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const populateFiles = (files) => {\r\n  let temp = files.sort((a, b) => b.publication - a.publication);\r\n  files = temp;\r\n  console.log(files);\r\n\r\n  return {\r\n    type: POPULATE_FILES,\r\n    payload: {\r\n      files: files,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addChat = (chat, chatID) => {\r\n  const chats = store.getState().chats.chats;\r\n  return (dispatch) => {\r\n    database\r\n      .collection(\"chats\")\r\n      .doc(chatID)\r\n      .set({\r\n        chatName: chat.chatName,\r\n        participants: chat.participants,\r\n        timestamp: chat.timestamp,\r\n      })\r\n      .then((chat) => {\r\n        chats.push({\r\n          id: chatID,\r\n          chatName: chat.chatName,\r\n          participants: chat.participants,\r\n          timestamp: chat.timestamp,\r\n        });\r\n        \r\n        dispatch(populateChats(chats));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n};\r\n\r\nexport const addPeopleToChat = (chats) => {\r\n  return {\r\n    type: ADD_PEOPLE_TO_CHAT,\r\n    payload: {\r\n      chats: chats,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addUserToChat = (chatID, participants) => {\r\n  const chats = store.getState().chats.chats;\r\n  return (dispatch) => {\r\n    database\r\n      .collection(\"chats\")\r\n      .doc(chatID)\r\n      .update({\r\n        participants: participants,\r\n      })\r\n      .then(() => {\r\n        const chatsIndex = chats.findIndex((obj) => obj.id === chatID);\r\n        chats[chatsIndex].participants = participants;\r\n        dispatch(addPeopleToChat(chats));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error getting document:\", error);\r\n        return null;\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteChatsFromLocal = (chats) => ({\r\n  type: DELETE_CHATS,\r\n  payload: {\r\n    chats,\r\n  },\r\n});\r\n\r\nexport const deleteChat = (chatId) => {\r\n  let chats = store.getState().chats.chats;\r\n  console.log(\"here\");\r\n  return (dispatch) => {\r\n    database\r\n      .collection(\"chats\")\r\n      .doc(chatId)\r\n      .delete()\r\n      .then(() => {\r\n        chats = chats.filter((obj) => {\r\n          return obj.id !== chatId;\r\n        });\r\n        dispatch(deleteChatsFromLocal(chats));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n};\r\n\r\nexport const removePeopleFromChat = (chats) => {\r\n  return {\r\n    type: DELETE_PEOPLE_FROM_CHAT,\r\n    payload: {\r\n      chats: chats,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deletePeopleFromChat = (chatID, participants) => {\r\n  const chats = store.getState().chats.chats;\r\n  return (dispatch) => {\r\n    database\r\n        .collection(\"chats\")\r\n        .doc(chatID)\r\n        .update({\r\n          participants: participants,\r\n        })\r\n        .then(() => {\r\n          const chatsIndex = chats.findIndex((obj) => obj.id === chatID);\r\n          chats[chatsIndex].participants = participants;\r\n          dispatch(removePeopleFromChat(chats));\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error getting document:\", error);\r\n          return null;\r\n        });\r\n  };\r\n};\r\n","\r\nimport {useState,useEffect} from \"react\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { addUserToChat} from \"../redux/actions\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nconst JoinByCode = props =>{\r\n    const currentUser = useSelector(state=>state.login.user)\r\n    const currentChat =useSelector(state=>state.chats.chats)\r\n    const[chatID,setChatID] = useState(\r\n        {\r\n            chatID:\"\",\r\n            isValid:undefined\r\n        })\r\n    const dispatch = useDispatch()\r\n\r\n    const uniqueChatCode = [...new Set(currentChat.map(item => item.id))];\r\n\r\n\r\n    const updateChatID = event =>{\r\n        setChatID({\r\n            chatID: event.target.value,\r\n            isValid: uniqueChatCode.includes(event.target.value)\r\n        })\r\n    }\r\n\r\n    function onlyUnique(value, index, self) {\r\n        return self.indexOf(value) === index;\r\n    }\r\n\r\n\r\n    const onSubmit = () => {\r\n        const joinedChat = currentChat.filter(obj => {\r\n            return obj.id === chatID.chatID\r\n        })\r\n        joinedChat[0].participants.push(currentUser.id)\r\n        const participants = joinedChat[0].participants.filter(onlyUnique)\r\n        dispatch(addUserToChat(joinedChat[0].id,participants));\r\n        clearForm();\r\n        props.onHide(false)\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setChatID({\r\n            chatID: \"\",\r\n            isValid: undefined\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add to chat by code\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"title\">\r\n                        <Form.Label>Code</Form.Label>\r\n                        <Form.Control\r\n                                    type={\"string\"}\r\n                                    valuse={chatID}\r\n                                    onChange={e=>updateChatID(e)}\r\n                                    required/>\r\n                        <div className=\"invalid-feedback\" style={chatID.isValid? {display: \"none\"}:{display:\"block\"} }>Cannot find this chat, try to check code  </div>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Link to={`${chatID.chatID}`}>\r\n                <Button className=\"btn btn-primary\" type=\"submit\" disabled={!chatID.isValid}\r\n                        onClick={onSubmit}>Join</Button>\r\n                </Link>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default JoinByCode","import React from \"react\";\r\n\r\nconst Slide = (props) =>\r\n    <div className={\"slide-\" + props.slideStatus} >\r\n        {props.children}\r\n    </div>\r\n\r\nexport default Slide;","const SlideIndicator = (props) =>\r\n    <button className=\"indicator\" onClick={props.clickHandler} >\r\n        <div className={\"circle indicator-\" + props.slideStatus}> </div>\r\n    </button>\r\nexport default SlideIndicator;","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React, {useState} from \"react\";\r\nimport Slide from \"./Slide\";\r\nimport {completeOnboarding, userCompletedOnboarding} from \"../redux/actions\";\r\nimport SlideIndicator from \"./SlideIndicator\";\r\n\r\nconst TOTAL_SLIDES = 4;\r\n\r\nconst OnboardingSlides = () => {\r\n    const [activeSlide, setActiveSlide] = useState(1);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setSlideState = id => {\r\n        if (id === activeSlide)\r\n            return \"active\";\r\n        return \"inactive\";\r\n    }\r\n\r\n    const nextSlide = () => {\r\n        let id = activeSlide;\r\n        id < TOTAL_SLIDES ? setActiveSlide(id + 1) : dispatch(userCompletedOnboarding());\r\n    }\r\n\r\n    const generateSlideIndicators = () => {\r\n        let indicators = [];\r\n        for (let i = 1; i <= TOTAL_SLIDES; i++) {\r\n            indicators.push(\r\n                <SlideIndicator slideStatus={setSlideState(i)} key={i}\r\n                                slideID={i}\r\n                                clickHandler={() => setActiveSlide(i)}/>\r\n            )\r\n        }\r\n        return indicators;\r\n    }\r\n\r\n    return (\r\n        <div className=\"slides-bg center bg-white my-5 text-center\">\r\n            <Slide slideStatus={setSlideState(1)} slideId={1}>\r\n                <h1 className=\"\">Join  a chat</h1>\r\n                <p>Join a chat by entering a code, or select an existing chat from the panel on the left</p>\r\n                <div className=\"fit my-4\">\r\n                    <img src={process.env.PUBLIC_URL + \"/onboarding1.PNG\"}\r\n                         className=\"img-fluid\"\r\n                         alt=\"Joining Chat\"/>\r\n                </div>\r\n            </Slide>\r\n            <Slide slideStatus={setSlideState(2)} slideId={2}>\r\n                <h1 className=\"\">Chat with friends and family</h1>\r\n                <p>Just type your message, and hit the send button on the bottom right\r\n                </p>\r\n                <div className=\"fit my-4\">\r\n                    <img src={process.env.PUBLIC_URL + \"/onboarding2.PNG\"}\r\n                         className=\"img-fluid\"\r\n                         alt=\"Chat View\"/>\r\n                </div>\r\n            </Slide>\r\n            <Slide slideStatus={setSlideState(3)} slideId={3}>\r\n                <h1 className=\"\">Upload Images</h1>\r\n                <p>Select the upload image button (at the bottom on the chat window, on the left) to upload an image.\r\n                </p>\r\n                <p>Then, click on the check mark next to the file name to confirm the upload</p>\r\n                <div className=\"fit my-4\">\r\n                    <img src={process.env.PUBLIC_URL + \"/onboarding3.PNG\"}\r\n                         className=\"img-fluid\"\r\n                         alt=\"Upload Images.\"/>\r\n                </div>\r\n            </Slide>\r\n            <Slide slideStatus={setSlideState(4)} slideId={4}>\r\n                <h1 className=\"\">Check Out The Gallery</h1>\r\n                <p>Select the blue button on the top right to view a chat's image gallery\r\n                </p>\r\n                <div className=\"fit my-4\">\r\n                    <img src={process.env.PUBLIC_URL + \"/onboarding4.PNG\"}\r\n                         className=\"img-fluid\"\r\n                         alt=\"Gallery View\"/>\r\n                </div>\r\n            </Slide>\r\n            {/*<Slide slideStatus={setSlideState(3)} slideId={3}>*/}\r\n            {/*    <h1>Something something something</h1>*/}\r\n            {/*    <p>Lorem ipsum...</p>*/}\r\n            {/*</Slide>*/}\r\n            <div className=\"slides-controls\">\r\n\r\n                <Link to={\"/\"} className=\"align-left control-btn\"\r\n                      onClick={() => dispatch(userCompletedOnboarding())}>Skip</Link>\r\n                <div className=\"align-center\">\r\n                    {generateSlideIndicators()}\r\n                </div>\r\n                {activeSlide < TOTAL_SLIDES ?\r\n                    <button className=\"align-right control-btn\" onClick={nextSlide}>Next\r\n                    </button> :\r\n                    <Link to={\"/\"} className=\"align-right control-btn\" onClick={()=> dispatch(userCompletedOnboarding())} >Done\r\n                    </Link>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OnboardingSlides","import { Link } from \"react-router-dom\";\r\nimport { LOGIN_STATE } from \"../redux/stateConstants\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Menu, Dropdown, Button, message, Space, Avatar } from \"antd\";\r\nimport {logout, resetOnboarding} from \"../redux/actions\";\r\nimport { getUsers } from \"../redux/actions\";\r\nimport JoinByCode from \"./JoinByCode\";\r\nimport { useState } from \"react\";\r\nimport OnboardingSlides from \"./OnboardingSlides\";\r\n\r\nconst LandingPage = () => {\r\n  const loginState = useSelector((state) => state.login);\r\n  const dispatch = useDispatch();\r\n  const onboarding = useSelector((state) => state.login.user.onboardingStatus);\r\n  const usersState = useSelector((state) => state.users);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  console.log(\"STATE\", onboarding);\r\n\r\n  const logOut = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"1\">\r\n        Hello {loginState.user && loginState.user.username}!\r\n      </Menu.Item>\r\n      <Menu.Item key=\"2\" onClick={logOut}>\r\n        Log Out\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Space wrap>\r\n      {/* {console.log(\"user in landing page\", loginState.user)}\r\n      {console.log(\"state in landing page\", loginState.status)} */}\r\n      {/* {console.log('all users', usersState.users)} */}\r\n\r\n      <div className=\"hero-image\">\r\n        <div>\r\n          <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n            <div className=\"container-fluid\">\r\n              <a className=\"navbar-brand \" href=\"#\">\r\n                <p className=\"display-6 \">Chat App |</p>\r\n              </a>\r\n              <div id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                  {loginState.status === LOGIN_STATE.LOGGED_IN && (\r\n                    <li className=\"nav-item\">\r\n                      <a\r\n                        className=\"nav-link \"\r\n                        href=\"#\"\r\n                        tabIndex=\"-2\"\r\n                        aria-disabled=\"true\"\r\n                      >\r\n                        <button\r\n                          className=\"btn btn-warning\"\r\n                          type=\"submit\"\r\n                          onClick={() => setModalShow(true)}\r\n                        >\r\n                          Join Group by Code\r\n                        </button>\r\n                        <JoinByCode\r\n                          show={modalShow}\r\n                          onHide={() => setModalShow(false)}\r\n                        />\r\n                      </a>\r\n                    </li>\r\n                  )}\r\n                  {loginState.status === LOGIN_STATE.LOGGED_IN ? (\r\n                    <Dropdown overlay={menu}>\r\n                      <div className=\"avatar-home\">\r\n                        <Avatar\r\n                          style={{\r\n                            color: \"#f56a00\",\r\n                            backgroundColor: \"#fde3cf\",\r\n                          }}\r\n                          size=\"large\"\r\n                        >\r\n                          {loginState.user &&\r\n                            loginState.user.username[0].toUpperCase()}\r\n                        </Avatar>\r\n                      </div>\r\n                    </Dropdown>\r\n                  ) : (\r\n                    <li className=\"nav-item\">\r\n                      <a\r\n                        className=\"nav-link \"\r\n                        href=\"#\"\r\n                        tabIndex=\"-1\"\r\n                        aria-disabled=\"true\"\r\n                      >\r\n                        <Link\r\n                          to=\"/signin\"\r\n                          className=\"btn btn-outline-dark\"\r\n                          style={{ color: \"white\" }}\r\n                        >\r\n                          Login\r\n                        </Link>\r\n                      </a>\r\n                    </li>\r\n                  )}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n        <div className=\"hero-text\">\r\n          <h1 className=\"fw-bold display-1\">Welcome to the chat app</h1>\r\n          <p>Connect with your friends and family</p>\r\n\r\n           {loginState.status === LOGIN_STATE.LOGGED_IN && (<>\r\n              {onboarding ?\r\n            <Link to=\"/chats\" className=\"btn btn-light\">\r\n              Go to My Chat\r\n            </Link>\r\n               : <>\r\n                    <Link to=\"/chats\" className=\"btn btn-light mx-4\">\r\n                    Go to My Chat\r\n                  </Link>\r\n                    <Link to=\"/onboarding\" className=\"btn btn-light mx-4\">\r\n                      Visit The Tutorial\r\n                    </Link>\r\n                  </>\r\n\r\n              }</>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Space>\r\n  );\r\n};\r\nexport default LandingPage;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { registerUser } from \"../redux/actions\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { LOGIN_STATE } from \"../redux/stateConstants\";\r\n\r\nlet editingBegun = false;\r\n\r\nconst Registration = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const loginState = useSelector((state) => state.login);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRegister = () => {\r\n    dispatch(registerUser(username, password));\r\n    clearForm();\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n      handleRegister();\r\n    }\r\n  };\r\n\r\n  const clearForm = () => {\r\n    editingBegun = false;\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loginState.status == LOGIN_STATE.LOGGED_IN) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div id=\"bg-login\">\r\n        <div className=\"outer-box-login\">\r\n          <h1 className=\"welcome-title-signup\">Create Account </h1>\r\n          <p className=\"has-account\" style={{ color: \"grey\" }}>\r\n            Already have an account? <Link to=\"/signin\">Sign In</Link>\r\n          </p>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-1\">\r\n              <label htmlFor=\"username\" className=\"form-label sr-only\"></label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n                className=\"form-control \"\r\n                value={username}\r\n                placeholder=\"Username\"\r\n                onChange={(e) => {\r\n                  editingBegun = true;\r\n                  setUsername(e.target.value);\r\n                }}\r\n                onKeyUp={(e) => handleKeyPress(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-4\">\r\n            <div className=\"col-12 col-sm-1\">\r\n              <label htmlFor=\"password\" className=\"form-label\"></label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                className=\"form-control\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => {\r\n                  editingBegun = true;\r\n                  setPassword(e.target.value);\r\n                }}\r\n                onKeyUp={(e) => handleKeyPress(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {!editingBegun && loginState.status === LOGIN_STATE.REGISTER_FAIL && (\r\n            <div className=\"alert alert-danger\">Something went wrong!</div>\r\n          )}\r\n\r\n          {!editingBegun && loginState.status === LOGIN_STATE.NETWORK_ERROR && (\r\n            <div className=\"alert alert-danger\">\r\n              Unable to connect to the server. Please check your internet\r\n              connection.\r\n            </div>\r\n          )}\r\n          {!editingBegun && loginState.status === LOGIN_STATE.REGISTER_EXISTED && (\r\n            <div className=\"alert alert-danger\">\r\n              This username is not availble, please pick another one!\r\n            </div>\r\n          )}\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <button className=\"play-btn\" onClick={handleRegister}>\r\n                <strong>Register</strong>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Registration;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { validateUser } from \"../redux/actions\";\r\nimport { LOGIN_STATE } from \"../redux/stateConstants\";\r\nimport { PageHeader } from \"antd\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\n\r\nlet editingBegun = false;\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const loginState = useSelector((state) => state.login);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogin = () => {\r\n    dispatch(validateUser(username, password));\r\n    clearForm();\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n      handleLogin();\r\n    }\r\n  };\r\n\r\n  const clearForm = () => {\r\n    editingBegun = false;\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  useEffect(()=> {\r\n    if (loginState.status == LOGIN_STATE.LOGGED_IN) {\r\n      history.push(\"/\")\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div id=\"bg-login\">\r\n        <PageHeader\r\n          ghost={false}\r\n          onBack={() => history.push(\"/\")}\r\n          subTitle=\"Back to Homepage\"\r\n        />\r\n        <div className=\"outer-box-login\">\r\n          <h1 className=\"welcome-title\">Welcome Back,</h1>\r\n          \r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-2 \">\r\n              <label htmlFor=\"username\" className=\"form-label\">\r\n                Username:\r\n              </label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n                className=\"form-control \"\r\n                value={username}\r\n                onChange={(e) => {\r\n                  editingBegun = true;\r\n                  setUsername(e.target.value);\r\n                }}\r\n                onKeyUp={(e) => handleKeyPress(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-4\">\r\n            <div className=\"col-12 col-sm-2\">\r\n              <label htmlFor=\"password\" className=\"form-label\">\r\n                Password:\r\n              </label>\r\n            </div>\r\n            <div className=\"col-9\">\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                className=\"form-control\"\r\n                value={password}\r\n                onChange={(e) => {\r\n                  editingBegun = true;\r\n                  setPassword(e.target.value);\r\n                }}\r\n                onKeyUp={(e) => handleKeyPress(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n          {!editingBegun && loginState.status === LOGIN_STATE.INVALID_LOGIN && (\r\n            <div className=\"alert alert-danger\">\r\n              Invalid username / password! Please try again.\r\n            </div>\r\n          )}\r\n          {!editingBegun && loginState.status === LOGIN_STATE.NETWORK_ERROR && (\r\n            <div className=\"alert alert-danger\">\r\n              Unable to connect to the server. Please check your internet\r\n              connection.\r\n            </div>\r\n          )}\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <button className=\"play-btn\" onClick={handleLogin}>\r\n                <strong>Login</strong>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <p className=\"register-sign\" style={{ color: \"grey\" }}>\r\n            Don't have an account? <Link to=\"/signup\">Register now </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { message } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../styles/message.css\";\r\n\r\nconst Message = (props) => {\r\n  const loginState = useSelector((state) => state.login);\r\n  const userState = useSelector((state) => state.users);\r\n  const date = new Date(props.message.timestamp).toDateString()\r\n\r\n\r\n  return (\r\n    //   MESSAGE FROM SOMEONE ELSE\r\n\r\n\r\n    <div>\r\n      {/* {console.log(\"AAAAA\", props.message)} */}\r\n      {loginState.user.id === props.message.sender ? (\r\n\r\n        <div className=\"media w-50 mb-3\" style={{ marginLeft: \"auto\" }}>\r\n          <div className=\"media-body\">\r\n            <div className=\"bg-primary rounded py-2 px-3 mb-2\">\r\n              {props.message.fileUrl !== \"\" && props.message.type === \"image/jpeg\" || props.message.type === \"image/png\"  ?\r\n              \r\n                 <a href={props.message.fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img src={props.message.fileUrl}\r\n                  alt={\"Image uploaded by \" + props.message.sender + \" on \"+  date} />\r\n                    </a>\r\n                \r\n                : props.message.fileUrl !== \"\" ?\r\n                    <p className=\"text-small mb-0 text-muted\">\r\n                      <a href={props.message.fileUrl}>\r\n                      {props.message.fileName}\r\n                      </a>\r\n                    </p>\r\n                    :\r\n                \"\"\r\n              }\r\n              <p className=\"text-small mb-0 text-white\">\r\n                {props.message.content}\r\n              </p>\r\n            </div>\r\n            <div style={{ marginLeft: \"auto\" }}>\r\n              <p className=\"small text-muted\">{date}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      ) : (\r\n        <div className=\"row\">\r\n          <div className=\"col-1\">\r\n            <img\r\n              alt=\"user\"\r\n              width=\"50\"\r\n              src=\"https://res.cloudinary.com/mhmd/image/upload/v1564960395/avatar_usae7z.svg\"\r\n            />\r\n          </div>\r\n          <div className=\"media w-50 mb-3\">\r\n            <div className=\"media-body ml-3\">\r\n              <div className=\"bg-light rounded py-2 px-3 mb-2\">\r\n                {props.message.fileUrl !== \"\" && props.message.type === \"image/jpeg\" || props.message.type === \"image/png\" ?\r\n                 <a href={props.message.fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <img src={props.message.fileUrl} \r\n                    alt={\"Image uploaded by \" + props.message.sender + \" on \" + date} />\r\n                      </a>\r\n                  : props.message.fileUrl !== \"\" ?\r\n                    <p className=\"text-small mb-0 text-muted\">\r\n                      <a href={props.message.fileUrl}>\r\n                      {props.message.fileName}\r\n                      </a>\r\n                    </p>\r\n                    :\r\n                    \"\"\r\n                }\r\n                <p className=\"text-small mb-0 text-muted\">\r\n                  {props.message.content}\r\n                </p>\r\n              </div>\r\n              {/* {console.log(\"USERS\", userState.users.filter(\r\n                    (user) => user.id === props.message.sender)[0].username)\r\n                  \r\n                  } */}\r\n              <p class=\"small text-muted\">\r\n               {userState.users.filter(\r\n                    (user) => user.id === props.message.sender)[0].username} | {new Date(props.message.timestamp).toLocaleTimeString('en-US')} | {new Date(props.message.timestamp).toDateString()}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\nconst GalleryItem = props => {\r\n    const date = new Date(props.publication).toDateString()\r\n\r\n    return (\r\n        <div className=\"col-12 col-sm-4 col-md-2 col-lg-2 col-xl-2 m-2\">\r\n            <div className={\"row\"}>\r\n            <img src={props.media}\r\n                 alt={\"Image uploaded on \" + date}\r\n\r\n            />\r\n            <p>Image uploaded on {date}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GalleryItem","import GalleryItem from \"./GalleryItem\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFiles, setLoading, setLoadingSuccess } from \"../redux/actions\";\r\nimport Loading from \"./Loading\";\r\nimport { PageHeader } from \"antd\";\r\nimport { STATUS } from \"../redux/stateConstants\";\r\nimport { Result } from \"antd\";\r\nconst placeholder = [\r\n  {\r\n    author: \"test\",\r\n    timestamp: Date.now(),\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/cs7580-final-project.appspot.com/o/files%2Ftest.jpg?alt=media&token=60821f95-ddec-4a8e-8792-a0fe0a38455b\",\r\n  },\r\n  {\r\n    author: \"test\",\r\n    timestamp: Date.now(),\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/cs7580-final-project.appspot.com/o/files%2Ftest.jpg?alt=media&token=60821f95-ddec-4a8e-8792-a0fe0a38455b\",\r\n  },\r\n  {\r\n    author: \"test\",\r\n    timestamp: Date.now(),\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/cs7580-final-project.appspot.com/o/files%2Ftest.jpg?alt=media&token=60821f95-ddec-4a8e-8792-a0fe0a38455b\",\r\n  },\r\n  {\r\n    author: \"test\",\r\n    timestamp: Date.now(),\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/cs7580-final-project.appspot.com/o/files%2Ftest.jpg?alt=media&token=60821f95-ddec-4a8e-8792-a0fe0a38455b\",\r\n  },\r\n  {\r\n    author: \"test\",\r\n    timestamp: Date.now(),\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/cs7580-final-project.appspot.com/o/files%2Ftest.jpg?alt=media&token=60821f95-ddec-4a8e-8792-a0fe0a38455b\",\r\n  },\r\n  {\r\n    author: \"test\",\r\n    timestamp: Date.now(),\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/cs7580-final-project.appspot.com/o/files%2Ftest.jpg?alt=media&token=60821f95-ddec-4a8e-8792-a0fe0a38455b\",\r\n  },\r\n  {\r\n    author: \"test\",\r\n    timestamp: Date.now(),\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/cs7580-final-project.appspot.com/o/files%2Ftest.jpg?alt=media&token=60821f95-ddec-4a8e-8792-a0fe0a38455b\",\r\n  },\r\n  {\r\n    author: \"test\",\r\n    timestamp: Date.now(),\r\n    url:\r\n      \"https://firebasestorage.googleapis.com/v0/b/cs7580-final-project.appspot.com/o/files%2Ftest.jpg?alt=media&token=60821f95-ddec-4a8e-8792-a0fe0a38455b\",\r\n  },\r\n];\r\n\r\nconst Gallery = (props) => {\r\n  console.log(\"GALLEY PROPS\", props);\r\n  const dispatch = useDispatch();\r\n  // let files = useSelector(state => state.files)\r\n  // const status = useSelector(state => state.loading.status);\r\n  // console.log(status)\r\n\r\n  // useEffect(() => {\r\n  //     console.log(files)\r\n  //     if (files.size === 0) {\r\n  //         dispatch(setLoading())\r\n  //     }\r\n  //     if (status === \"loading\") {\r\n  //\r\n  //         files = dispatch(getFiles())\r\n  //         console.log(\"files\", files)\r\n  //         dispatch(setLoadingSuccess())\r\n  //\r\n  //     }\r\n  // }, [dispatch, status])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row d-flex justify-content-left\">\r\n        {props.files.length === 0 ? (\r\n          <Result\r\n            status=\"500\"\r\n            title=\"No file for this chat\"\r\n            dd\r\n          />\r\n        ) : (\r\n          props.files.map((file) => {\r\n            return (\r\n              <GalleryItem\r\n                media={file.fileUrl}\r\n                author={file.sender}\r\n                publication={file.timestamp}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import Message from \"./Message\";\r\nimport \"../styles/conversation.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  getMessages,\r\n  getFiles,\r\n  getUsernameByUserId,\r\n  addMessages,\r\n  populateMessagesById,\r\n  getMessagesById,\r\n  deleteChat,\r\n  getFileByChatId,\r\n  populateMessages\r\n} from \"../redux/actions\";\r\nimport {\r\n  faPaperPlane,\r\n  faUpload,\r\n  faCheck,\r\n  faTimes,\r\n  faEllipsisV\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport firebase from \"../fbConfig\";\r\nimport { PageHeader, Tooltip, Divider } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addFile } from \"../redux/actions\";\r\nimport Gallery from \"./Gallery\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Conversation = (props) => {\r\n  // STATES FROM REDUX\r\n  const fileState = useSelector((state) => state.files);\r\n  const chatState = useSelector((state) => state.chats);\r\n  const userState = useSelector((state) => state.users);\r\n  const currentUser = useSelector((state) => state.login.user);\r\n  const messageState = useSelector((state) => state.messages);\r\n\r\n  // LOCAL STATES\r\n  const [usernames, setUsernames] = useState([]);\r\n  const [file, setFile] = useState(\"\");\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n  const [filePicked, setFilePicked] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [galleryToggle, setGalleryToggle] = useState(false);\r\n  const [filesForChat, setFilesForChat] = useState([]);\r\n  const [allMessagesForChat, setMessagesForChat] = useState([]);\r\n  const [messageLength, setMessageLength] = useState(\r\n    messageState.messages.length\r\n  );\r\n  const user = useSelector((state) => state.login.user);\r\n\r\n  const params = useParams();\r\n  const chatId = params.cid;\r\n  const storage = firebase.storage();\r\n  const dispatch = useDispatch();\r\n  //  console.log(\"test\")\r\n\r\n  const getListOfUsername = (participantsIds) => {\r\n    let usernames = [];\r\n\r\n    participantsIds.map((participantId) => {\r\n      const user = getUsernameByUserId(participantId, userState.users);\r\n      usernames.push(user);\r\n    });\r\n    setUsernames(usernames);\r\n  };\r\n\r\n  const getFilesForChat = (chatId) => {\r\n    \r\n    const files = [];\r\n    messageState.messages.map((file) => {\r\n      if (file.chatId === chatId) {\r\n        if (file.fileUrl.length !== 0) {\r\n          files.push(file);\r\n        }\r\n      }\r\n    });\r\n    console.log(\"FILES\", files)\r\n    setFilesForChat(files);\r\n  };\r\n\r\n  const sendMessage = (e) => {\r\n    if (file !== \"\") {\r\n      // dispatch(\r\n      //   addMessages(\r\n      //     chatId,\r\n      //     message,\r\n      //     file.name,\r\n      //     fileUrl,\r\n      //     usernames,\r\n      //     currentUser.id,\r\n      //     new Date().getTime(),\r\n      //     file.type\r\n      //   )\r\n      // );\r\n      dispatch(\r\n        addFile(\r\n          chatId,\r\n          message,\r\n          file.name,\r\n          fileUrl,\r\n          usernames,\r\n          currentUser.id,\r\n          new Date().getTime(),\r\n          file.type\r\n        )\r\n      );\r\n    } else {\r\n      dispatch(\r\n        addMessages(\r\n          chatId,\r\n          message,\r\n          \"\",\r\n          \"\",\r\n          usernames,\r\n          currentUser.id,\r\n          new Date().getTime(),\r\n          \"\"\r\n        )\r\n      );\r\n    }\r\n    e.preventDefault();\r\n    clearForm();\r\n  };\r\n\r\n  const getMessageForChatById = (chatId) => {\r\n    const messages = messageState.messages.filter(\r\n      (message) => message.chatId === chatId\r\n    );\r\n    setMessagesForChat(messages);\r\n\r\n    // replace to get by param later\r\n  };\r\n\r\n  const pickFile = (files) => {\r\n    setFile(files);\r\n    setMessageLength(file.name)\r\n    setFilePicked(true);\r\n  };\r\n  const uploadFile = () => {\r\n    let url = \"\";\r\n    const uploadFile = storage.ref(`/files/${file.name}`).put(file);\r\n    uploadFile.on(\r\n      \"state_changed\",\r\n      (snapShot) => {\r\n        console.log(snapShot);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"files\")\r\n          .child(file.name)\r\n          .getDownloadURL()\r\n          .then((fireBaseUrl) => {\r\n            setFileUrl(fireBaseUrl);\r\n          });\r\n      }\r\n    );\r\n\r\n    {\r\n      console.log(url);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // dispatch(getMessages(chatId))\r\n    // dispatch(getFileByChatId(chatId))\r\n\r\n    getFilesForChat(chatId);\r\n    // dispatch(getMessagesById(chatId, messageState.messages))\r\n    setGalleryToggle(false);\r\n  }, [chatId, messageState.messages]);\r\n\r\n  useEffect(() => {\r\n    const database = firebase.firestore()\r\n    const unsubscribe = database\r\n      .collection(\"chats\")\r\n      .doc(chatId)\r\n      .collection(\"messages\")\r\n      .onSnapshot((querySnapshot) => {\r\n        if (querySnapshot.size > 0) {\r\n          let messages = [];\r\n          querySnapshot.forEach((doc) => {\r\n            messages.push({\r\n              id: doc.id,\r\n              ...doc.data(),\r\n            });\r\n          });\r\n\r\n          dispatch(populateMessages(messages));\r\n        }\r\n      });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [chatId]);\r\n\r\n  const scrollToBottom = () => {\r\n    const messageWindow = document.getElementById(\"messageWindow\")\r\n    if (messageWindow) {\r\n      const bottom = messageWindow?.scrollHeight - messageWindow?.clientHeight\r\n      messageWindow.scrollTo(0, bottom)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    scrollToBottom()\r\n  }, [messageState.messages]);\r\n\r\n\r\n  const clearForm = () => {\r\n    setFile(\"\");\r\n    setFilePicked(\"\");\r\n    setFileUrl(\"\");\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.currentChat && (\r\n        <div>\r\n          <div>\r\n            <div className=\"message-header mt-2\">\r\n              <PageHeader\r\n                className=\"site-page-header bg-white\"\r\n                title={\r\n                  props.currentChat.chatName !== \"\"\r\n                    ? props.currentChat.chatName\r\n                    : props.usernames.join(\", \")\r\n                }\r\n                extra={[\r\n                  <div className=\"message-header\">\r\n                    <h4> Chat Code: {props.currentChat.id}</h4>\r\n                    {galleryToggle ? (\r\n                      <Tooltip title=\"Hide Gallery\">\r\n                        <button\r\n                          className=\"btn btn-primary float-end\"\r\n                          onClick={() => setGalleryToggle(!galleryToggle)}\r\n                        >\r\n                          <FontAwesomeIcon icon={faEllipsisV} />\r\n                        </button>\r\n                      </Tooltip>\r\n                    ) : (\r\n                      <Tooltip title=\"Show Gallery\">\r\n                        <button\r\n                          className=\"btn btn-primary float-end\"\r\n                          onClick={() => setGalleryToggle(!galleryToggle)}\r\n                        >\r\n                          <FontAwesomeIcon icon={faEllipsisV} />\r\n                        </button>\r\n                      </Tooltip>\r\n                    )}\r\n                  </div>,\r\n                ]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"px-3 py-5 chat-box bg-white\" >\r\n              {!galleryToggle ? (\r\n                <div className=\"messageWindow\" id={\"messageWindow\"}>\r\n                  {messageState.messages\r\n                    .filter((message) => message.chatId === chatId)\r\n                    .sort((a, b) => {\r\n                      return new Date(a.timestamp) - new Date(b.timestamp);\r\n                    })\r\n                    .map((item) => {\r\n                      return <Message message={item} />;\r\n                    })}\r\n                </div>\r\n              ) : (\r\n                <div className=\"messageWindow\">\r\n                  {console.log(\"GALLERY\", filesForChat)}\r\n                  <Gallery files={filesForChat} />\r\n                </div>\r\n              )}\r\n\r\n              {/* INPUT FORM  */}\r\n              <form></form>\r\n              <form action=\"#\" className=\"bg-light\">\r\n                <div>\r\n                  <div className=\"upload\">\r\n                    <span>\r\n                    <Tooltip title=\"Click check to confirm upload after choosing a file or x to cancel\">\r\n                      <label htmlFor=\"fileupload\">\r\n                        <FontAwesomeIcon icon={faUpload} />\r\n                        <span id=\"file-name\">{file.name}</span>\r\n                      </label>\r\n                      </Tooltip>\r\n                      <input\r\n                        type=\"file\"\r\n                        id=\"fileupload\"\r\n                        // onChange={e => setFile(e.target.files[0])}\r\n                        onChange={(e) => pickFile(e.target.files[0])}\r\n                        onClick={(e) => (e.target.value = null)}\r\n                      />\r\n                    </span>\r\n                    <span className=\"upload\">\r\n                      {filePicked ? (\r\n                        <div>\r\n                          <FontAwesomeIcon\r\n                            className=\"fa-sm upload-btn upload-check\"\r\n                            icon={faCheck}\r\n                            onClick={() => {\r\n                              uploadFile();\r\n                              setFilePicked(false);\r\n                              setMessage(file.name);\r\n                            }}\r\n                          />\r\n                          <FontAwesomeIcon\r\n                            className=\"fa-sm upload-btn upload-cancel\"\r\n                            icon={faTimes}\r\n                            onClick={() => {\r\n                              setFile(\"\");\r\n                              setFilePicked(false);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message\"\r\n                    aria-describedby=\"button-addon2\"\r\n                    class=\"form-control rounded-0 border-0 py-4 bg-light\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button\r\n                      disabled={filePicked}\r\n                      id=\"button-addon2\"\r\n                      type=\"submit\"\r\n                      className=\"btn btn-link\"\r\n                      onClick={(e) => sendMessage(e)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faPaperPlane} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n","import {useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Search = props => {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const submit = event => {\r\n        event.preventDefault();\r\n        console.log(text)\r\n        props.submitSearch(text);\r\n    }\r\n\r\n\r\n\r\n    const handleKeyPress = event => {\r\n        if (event.keyCode === 13) {\r\n            submit(event);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-form container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-10 pe-0 ps-0\">\r\n                    <label htmlFor=\"search\"  className=\"visually-hidden\">Search</label>\r\n                    <input id=\"search\" className=\"form-control rounded-start\" type=\"search\"\r\n                           placeholder={props.placeholder}\r\n                           value={text} onChange={e => setText(e.target.value)}\r\n                           onKeyUp={e => handleKeyPress(e)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-2 p-0\">\r\n                    <button className=\"btn btn-secondary\" onClick={submit}>\r\n                        <FontAwesomeIcon icon={faSearch}/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n\r\n\r\n","const ChatPreview = (props) => {\r\n\r\n  const peopleName = (list) => {\r\n    \r\n    const nameList = [];\r\n    for (let i = 0; i < list.length; i++) {\r\n      let user = props.users.filter(obj => {\r\n        return obj.id === list[i]\r\n      })\r\n      if (user && user[0]) {\r\n      nameList.push(user[0].username);\r\n\r\n      }\r\n    }\r\n    return nameList;\r\n  };\r\n\r\n  const name = peopleName(props.chat.participants.slice(0, 2));\r\n\r\n  return (\r\n\r\n    <div\r\n      className=\"card card-preview\"\r\n      key={props.id}\r\n    >\r\n      {console.log('users from props', props.users)}\r\n     {console.log('2', props.chat.participants)} \r\n      <a className=\" stretched-link \" href>\r\n        <h6 className=\"card-header \">Name: {props.chat.chatName}</h6>\r\n        <div>\r\n          <p className=\"card-title text-secondary text-center\">\r\n            {name.toString()} in the chat\r\n          </p>\r\n        </div>\r\n      </a>\r\n    </div>\r\n  ); \r\n};\r\nexport default ChatPreview;\r\n","import { useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addChat, getChats, getUsers } from \"../redux/actions\";\r\n\r\nconst CreateNewChat = (props) => {\r\n  const currentUser = useSelector((state) => state.login.user);\r\n  const userList = useSelector((state) => state.users.users);\r\n  const currentChat = useSelector((state) => state.chats.chats);\r\n  const [chatName, setChatName] = useState(\"\");\r\n  const [potentialName, setPotentialName] = useState([]);\r\n  const [participants, setParticipants] = useState([]);\r\n  const [wrongSpelling, checkWrongSpelling] = useState(false);\r\n  const uniqueChatCode = [...new Set(currentChat.map((item) => item.id))];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const makeID = (length) => {\r\n    var result = [];\r\n    var characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n      result.push(\r\n        characters.charAt(Math.floor(Math.random() * charactersLength))\r\n      );\r\n    }\r\n    return result.join(\"\");\r\n  };\r\n\r\n  const makeUniqueID = (length) => {\r\n    const result = makeID(length);\r\n    if (!uniqueChatCode.includes(result)) {\r\n      return result;\r\n    } else {\r\n      return makeUniqueID(length);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkWrongSpelling(checkParticipant(participants));\r\n  }, [participants]);\r\n\r\n  const onParticipantsInputChange = (event) => {\r\n    setParticipants(event.target.value);\r\n    // console.log(checkParticipant(participants))\r\n  };\r\n\r\n  const checkParticipant = (text) => {\r\n    if (text.length > 0) {\r\n      let list = text.split(\",\");\r\n    //   console.log(list);\r\n      for (let i = 0; i < list.length; i++) {\r\n        const inviteUser = userList.filter((obj) => {\r\n          return obj.username === list[i];\r\n        });\r\n        // console.log(inviteUser);\r\n        if (inviteUser.length === 0) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  function onlyUnique(value, index, self) {\r\n    return self.indexOf(value) === index;\r\n  }\r\n\r\n  const addParticipant = () => {\r\n    // setTimeout(() => {\r\n    //   // dispatch(getUsers())\r\n    // }, 1000);\r\n    console.log('currentUser', currentUser)\r\n    console.log('userList', userList)\r\n\r\n    const myUser = userList.filter(user=>user.username === currentUser.username)\r\n    console.log('myUser', myUser)\r\n    let result = [myUser[0].id];\r\n    let nameList = [currentUser.username];\r\n    if (participants.length > 0) {\r\n      let list = participants.split(\",\");\r\n    \r\n      for (let i = 0; i < list.length; i++) {\r\n\r\n        const inviteUser = userList.filter((obj) => {\r\n          return obj.username === list[i];\r\n        });\r\n        result.push(inviteUser[0].id);\r\n        nameList.push(list[i]);\r\n      }\r\n    }\r\n    result = result.filter(onlyUnique);\r\n    nameList = nameList.filter(onlyUnique);\r\n    return [result, nameList];\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const result = addParticipant();\r\n    const chatID = makeUniqueID(6);\r\n    let newChat = {};\r\n\r\n    if (chatName.length === 0) {\r\n      newChat = {\r\n        chatName: result[1].slice(0, 5).toString(),\r\n        participants: result[0],\r\n        timestamp: new Date().getTime(),\r\n      };\r\n    } else {\r\n      newChat = {\r\n        chatName: chatName,\r\n        participants: result[0],\r\n        timestamp: new Date().getTime(),\r\n      };\r\n    }\r\n    console.log('new chat', newChat)\r\n    dispatch(addChat(newChat, chatID));\r\n    clearForm();\r\n    props.onHide(false);\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setChatName(\"\");\r\n    setParticipants([]);\r\n    setPotentialName([]);\r\n    checkWrongSpelling(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Create a new chat\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group controlId=\"title\">\r\n            <Form.Label>Chat name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              valuse={chatName}\r\n              onChange={(e) => setChatName(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"user\">\r\n            <Form.Label>\r\n              Add users by username (Multiple users should be separated by\r\n              commas)\r\n            </Form.Label>\r\n            <Form.Control\r\n              type=\"user\"\r\n              value={participants}\r\n              onChange={(e) => onParticipantsInputChange(e)}\r\n            />\r\n            <div\r\n              className=\"invalid-feedback\"\r\n              style={wrongSpelling ? { display: \"none\" } : { display: \"block\" }}\r\n            >\r\n              Cannot find this last person, try to check spelling{\" \"}\r\n            </div>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          className=\"btn btn-primary\"\r\n          type=\"submit\"\r\n          disabled={!wrongSpelling}\r\n          onClick={onSubmit}\r\n        >\r\n          Create\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\nexport default CreateNewChat;\r\n","import Search from \"./Search\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlus,\r\n  faChevronRight,\r\n  faChevronLeft,\r\n  faHome\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ChatPreview from \"./ChatPreview\";\r\nimport Conversation from \"./Conversation\";\r\nimport \"../styles/conversation.css\";\r\nimport { Space } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport CreateNewChat from \"./CreateNewChat\";\r\nimport { LOGIN_STATE } from \"../redux/stateConstants\";\r\nimport firebase from \"../fbConfig\";\r\nimport { populateChats, getUsers } from \"../redux/actions.js\";\r\n\r\nconst SidePreview = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [addByCode, setAddByCode] = useState(false);\r\n  const chatState = useSelector((state) => state.chats);\r\n  const messageState = useSelector((state) => state.messages);\r\n  const loginState = useSelector((state) => state.login);\r\n  const users = useSelector((state) => state.users.users);\r\n  const currentUser = useSelector((state) => state.login.user);\r\n  const myChat = chatState.chats;\r\n  const [currentChat, setCurrentChat] = useState();\r\n  const [usernames, setUsernames] = useState([]);\r\n  const [displaySide, setDisplaySide] = useState(true);\r\n\r\n  let param = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  let currentUserChat = myChat.filter((obj) => {\r\n    return obj.participants.includes(currentUser.id);\r\n  });\r\n\r\n  // const [selectedChat, setSelectedChat] = useState(currentUserChat[0]);\r\n  // Returns current chat Object by Id\r\n  const getChatByChatId = (chatId) => {\r\n    const chat = chatState.chats.find((chat) => chat.id === chatId);\r\n    if (chat) {\r\n      setCurrentChat(chat);\r\n    }\r\n  };\r\n\r\n  const searchName = (text) => {\r\n    if (text.length > 0) {\r\n      const selectedChat = currentUserChat.filter((obj) => {\r\n        return obj.chatName === text;\r\n      });\r\n      return selectedChat;\r\n    } else {\r\n      return currentUserChat;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let chatId = param.cid;\r\n    getChatByChatId(chatId);\r\n  }, [param]);\r\n\r\n  useEffect(() => {\r\n    console.log('trying to add new chat')\r\n    dispatch(getUsers())\r\n    const database = firebase.firestore();\r\n    const unsubscribe = database\r\n      .collection(\"chats\")\r\n      .onSnapshot((querySnapshot) => {\r\n        let chats = [];\r\n        querySnapshot.forEach((doc) => {\r\n          chats.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n        });\r\n        dispatch(populateChats(chats));\r\n      });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [chatState.chats.length]);\r\n\r\n  return (\r\n    <>\r\n      {loginState.status === LOGIN_STATE.LOGGED_IN ? (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            {displaySide ? (\r\n              <div className=\"col-md-2 col-xl-2 px-sm-2 bg-light\">\r\n                <div className=\"d-flex flex-column align-items-center align-items-sm-start px-3 pt-2 text-white min-vh-100 container-chat sidebar\">\r\n\r\n                  <Link to=\"/\" >\r\n\r\n                    <button className=\"btn btn-primary home-button\">\r\n                      <FontAwesomeIcon icon={faHome} /></button>\r\n                  </Link>\r\n\r\n                  <button\r\n                    onClick={() => setDisplaySide(!displaySide)}\r\n                    className=\"btn btn-primary m-2 d-xs-block\"\r\n                  >\r\n                    <span>\r\n                    <FontAwesomeIcon icon={faChevronLeft} />\r\n                    <p  className=\"d-block d-sm-block d-md-none\">Go to Messages</p>\r\n                    </span>\r\n                  </button>\r\n\r\n\r\n                  <a className=\" d-flex align-items-center pb-3 text-dark text-decoration-none p-0\">\r\n                    <span className=\"fs-5 \">Hello {currentUser.username}!</span>\r\n                  </a>\r\n\r\n                  <div className=\"search-container\">\r\n                    <Search\r\n                      placeholder=\"Search chat name\"\r\n                      submitSearch={setSearch}\r\n                    />\r\n                  </div>\r\n                  <div className=\"preview-window\">\r\n                    <h5 className={\"text-left\"}>Your chats</h5>\r\n                    <Space direction=\"vertical\">\r\n                      {searchName(search).map((chat, id) => {\r\n                        return (\r\n                          <Link to={`${chat.id}`}>\r\n                            <ChatPreview\r\n                              chat={chat}\r\n                              id={id}\r\n                              users={users}\r\n                            // selected={setSelectedChat}\r\n                            />\r\n                          </Link>\r\n                        );\r\n                      })}\r\n                    </Space>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex flex-row-reverse\">\r\n                    <div className=\"p-3\">\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => setAddByCode(true)}\r\n                      >\r\n                        <FontAwesomeIcon icon={faPlus} /> Create\r\n                      </Button>\r\n                      <CreateNewChat show={addByCode} onHide={setAddByCode} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"col-sm-1 align-items-left align-items-sm-start px-3 pt-2 text-white \">\r\n                <Link to=\"/\" >\r\n                  <button className=\"btn btn-primary m-2 home-button\">\r\n                    <FontAwesomeIcon icon={faHome} /></button>\r\n                </Link>\r\n                <button\r\n                  onClick={() => setDisplaySide(!displaySide)}\r\n                  className=\"btn btn-primary m-2 \"\r\n                >\r\n                  <FontAwesomeIcon icon={faChevronRight} />\r\n                </button>\r\n\r\n              </div>\r\n\r\n            )}\r\n            {displaySide ? (\r\n              // <div className=\"col-10 d-none d-md-block\">\r\n              <div className=\"col-10 d-none d-md-block d-xl-block\">\r\n                {currentUserChat.length === 0 ? (\r\n                  \"\"\r\n                ) : (\r\n                  <Conversation\r\n                    currentUser={currentUser}\r\n                    // allMessagesForChat={allMessagesForChat}\r\n                    currentChat={currentChat}\r\n                    usernames={usernames}\r\n                  />\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"col-10\">\r\n                {currentUserChat.length === 0 ? (\r\n                  \"\"\r\n                ) : (\r\n                  <Conversation\r\n                    currentUser={currentUser}\r\n                    // allMessagesForChat={allMessagesForChat}\r\n                    currentChat={currentChat}\r\n                    usernames={usernames}\r\n                  />\r\n                )}\r\n              </div>\r\n            )}\r\n            {/* </div> */}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        (window.location.href = \"/\")\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidePreview;\r\n","import { useSelector } from \"react-redux\"; // Automatically passes the store to all child components\r\nimport \"../styles/styles.css\";\r\nimport LandingPage from \"../components/LandingPage\";\r\nimport Registration from \"../components/Registration.js\";\r\nimport { useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Login from \"../components/Login\";\r\nimport \"antd/dist/antd.css\";\r\nimport Conversation from \"../components/Conversation\";\r\nimport \"../styles/conversation.css\";\r\nimport \"../styles/chatWindow.css\";\r\nimport SidePreview from \"../components/SidePreview\";\r\nimport {getChats, getFiles, getMessages, getUsers} from \"../redux/actions\";\r\nimport OnboardingSlides from \"../components/OnboardingSlides\";\r\n\r\n\r\nconst App = () => {\r\n  const usersState = useSelector((state) => state.users);\r\n  const chatState = useSelector((state) => state.chats)\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    console.log('calling from app')\r\n    dispatch(getUsers());\r\n    dispatch(getChats());\r\n\r\n  },[])\r\n  \r\n  return (\r\n    \r\n    <Router>\r\n      {/* {console.log('all chats', chatState)} */}\r\n      <Switch>\r\n        <Route path=\"/signup\">\r\n          <Registration />\r\n        </Route>\r\n        <Route path=\"/signin\">\r\n          <Login />\r\n        </Route>\r\n        {/* Temporary route to chat for testing*/}\r\n        <Route path={[\"/onboarding\"]}>\r\n          <OnboardingSlides/>\r\n        </Route>\r\n        <Route path={[\"/:cid\"]}>\r\n          <SidePreview />\r\n        </Route> \r\n        <Route path={[\"/chats\"]}>\r\n          <SidePreview />\r\n        </Route>\r\n         <Route path=\"/side\">\r\n          <SidePreview />\r\n        </Route>\r\n        <Route path={[\"/\", \"/home\"]}>\r\n          <LandingPage />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./views/App\";\r\nimport store from \"../src/redux/store\"; // The store and main reducer\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\"; // Automatically passes the store to all child components\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}